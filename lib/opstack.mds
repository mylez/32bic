call opstack.init
jump opstack.endoffile

#####################
### OPERAND STACK ###
#####################

# by Miles Smith

# A special case stack for argument passing
# Call opstack.init before using functions opstack.push, opstack.pop.
# opstack.push grabs argument from rE.
python print ('*Reminder: opstack.mds requires call opstack.init')

# Declaring opstack with size: 0x100
# To modfiy, also change put r3 value in opstack.overflow


# Variables:
var opstack.pointer 0x100

point opstack.init

	ram read r0  opstack.pointer
	mar read r0
	ram write r0 opstack.pointer
	return


point opstack.push

	# Test for Overflow
	ram read r0 opstack.pointer
	mar read r2
	put r3 0xff
	alu + r3 r2 r3
	jump equals r0 r3 opstack.overflow
	
	# Push onto stack
	put r1 1
	alu + r0 r1 r0
	mar write r0
	ram write rE
	ram write r0 opstack.pointer
	return
	
point opstack.pop

	# Test for Underflow
	ram read r0 opstack.pointer
	mar read r2
	put r3 0
	alu - r0 r2 r2
	jump equals r2 r3 opstack.underflow
	
	# Pop from stack
	put r1 1
	mar write r0
	alu - r0 r1 r0
	ram read rE
	ram write r0 opstack.pointer
	return

point opstack.clear

	put r0 0
	ram write r0 opstack.pointer
	
	return

point opstack.overflow
	printl
	printl Error: Operand stack overflow
	
	return
	
point opstack.underflow
	printl
	printl Error: Operand stack underflow
	
	return

point opstack.endoffile